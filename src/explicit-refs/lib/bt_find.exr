(* Example 1 *)

let n_left = { data <= 12; left <= 0; right <= 0}
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left; right <= n_right }
in let t1 = { root <= n_root; length <= 3 }
in letrec find_tree_helper (nd) =
	proc (key) {
		if number?(nd) then (
			0
		)
		else if (nd.data = key) then (
			1
		)
		else if (nd.data >> key) then (
			(find_tree_helper nd.left) key
		)
		else (
			(find_tree_helper nd.right) key
		)
	}
in let find_tree = proc (t) {
	proc (key) {
		((find_tree_helper t.root) key) = 1
	}
}
in ((find_tree t1) 12)
